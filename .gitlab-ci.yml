# Made by Apside - 2023
stages:
  - docker-images
  - deploy

create-image-sql:
  stage: docker-images
  image: docker:20.10.16
  tags:
    - docker
  variables:
    REGISTRY_USER: $HARBGOR_REGISTRY_USER
    REGISTRY_PASSWORD: $HARBOR_REGISTRY_PASSWORD
    REGISTRY_URL: harbor.indus.aix.apsdigit.lan
    DOCKER_IMAGE: harbor.indus.aix.apsdigit.lan/parcindus/mssqlparcindus:$CI_COMMIT_REF_NAME
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD https://$REGISTRY_URL
  script:
    - "docker build -t $DOCKER_IMAGE -f DevOps/mssql/dockerfile ."
    - docker push $DOCKER_IMAGE

create-image-builder:
    stage: docker-images
    image: docker:20.10.16
    tags:
    - docker
    variables:
        REGISTRY_USER: $HARBGOR_REGISTRY_USER
        REGISTRY_PASSWORD: $HARBOR_REGISTRY_PASSWORD
        REGISTRY_URL: harbor.indus.aix.apsdigit.lan
        DOCKER_IMAGE: harbor.indus.aix.apsdigit.lan/parcindus/dotnetbuildparcindus:$CI_COMMIT_REF_NAME
    before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD https://$REGISTRY_URL
    script:
    - "docker build -t $DOCKER_IMAGE -f DevOps/builder/dockerfile ."
    - docker push $DOCKER_IMAGE

deploy-BDD:
  stage: deploy
  image: docker:20.10.16
  tags:
    - docker
  variables:
    REGISTRY_USER: $HARBGOR_REGISTRY_USER
    REGISTRY_PASSWORD: $HARBOR_REGISTRY_PASSWORD
    REGISTRY_URL: harbor.indus.aix.apsdigit.lan
    DOCKER_IMAGE_SQL: harbor.indus.aix.apsdigit.lan/parcindus/mssqlparcindus:$CI_COMMIT_REF_NAME
    DOCKER_CONTAINER_NAME_SQL: mssql:$CI_COMMIT_REF_NAME
    DOCKER_NETWORK: parcindus
    ACCEPT_CONDITIONS: $ACCEPT_EULA
    DB_PWD: $SA_PASSWORD
    MSSQL_VERSION: $MSSQL_PID
    CI_DEBUG_TRACE: "true"
  # To know how this is working : https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-the-docker-executor-with-docker-socket-binding
  before_script:
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD https://$REGISTRY_URL
  script:
    # Stop and remove the container if it exists
    - docker stop $DOCKER_CONTAINER_NAME_SQL  || true
    - docker rm $DOCKER_CONTAINER_NAME_SQL  || true
    - docker network rm $DOCKER_NETWORK || true
    # Create the network
    - docker network create $DOCKER_NETWORK || true
    # First run the back, with little sleep after it to let it some time
    - "docker run -d --rm \
    --network=$DOCKER_NETWORK \
    --env DB_PWD=$DB_PWD \
    --env MSSQL_PID=$MSSQL_VERSION \
    --env ACCEPT_EULA=$ACCEPT_CONDITIONS \
    --env API_TRUSTSTORE_PWD=$API_TRUSTSTORE_PWD \
    --name $DOCKER_CONTAINER_NAME_SQL"
    - sleep 30

# stop:
#   stage: deploy
#   image: docker:20.10.16
#   allow_failure: true
#   rules:
#   - if: $CI_COMMIT_REF_NAME == 'master'
#     when: manual
#   tags:
#     - docker
#   variables:
#     DOCKER_CONTAINER_NAME_BACK: prevol-back-$CI_COMMIT_REF_NAME
#     DOCKER_CONTAINER_NAME_NGINX: prevol-back-nginx-$CI_COMMIT_REF_NAME
#     DOCKER_NETWORK: prevol-back-network-$CI_COMMIT_REF_NAME
#   environment:
#     name: $CI_COMMIT_REF_NAME
#     action: stop
#   script:
#     - docker stop $DOCKER_CONTAINER_NAME_BACK $DOCKER_CONTAINER_NAME_NGINX || true
#     - docker rm $DOCKER_CONTAINER_NAME_BACK $DOCKER_CONTAINER_NAME_NGINX || true
#     - docker network rm $DOCKER_NETWORK || true

    