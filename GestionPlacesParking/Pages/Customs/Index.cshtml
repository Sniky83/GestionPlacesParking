@page "/Index"
@model GestionPlacesParking.Web.UI.Pages.Customs.IndexModel
@inject LinkGenerator linkGenerator
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var requestToken = Antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}

<h1 class="display-4">Places de parking</h1>
<table class="table">
    <thead>
        <tr>
            <th></th>
            @foreach (var ParkingSlot in Model.ParkingSlotList)
            {
                <th>@ParkingSlot.Label</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var DayOfTheWeek in Model.Day.DaysOfTheWeek)
        {
            @*Règle métier: Le samedi et le dimanche on ne fait pas de réservation*@
            @if (DayOfTheWeek.Key != "Samedi" && DayOfTheWeek.Key != "Dimanche")
            {
                <tr>
                    <td>@DayOfTheWeek.Key</td>
                    @for (var i = Model.ParkingSlotList.First().Id; i < (Model.ParkingSlotList.Count + 1); i++)
                    {
                        @*Si le jour actuel + la place de parking est = à la donnée en cours alors on affiche le nom dans la case*@
                        var findReservation = Model.ReservationList.Find(
                            x => x.ReservationDate.ToShortDateString() == DayOfTheWeek.Value.ToShortDateString() &&
                            x.ParkingSlotId == i
                        );

                        if (findReservation != null)
                        {
                            @*Pas besoin d'injecter un ID pour reconnaitre car ne réserve pas pour un jour déjà réservé*@
                            <td><button class="bg-danger">@findReservation.ReservingName</button></td>
                        }
                        else
                        {
                            @*On inject un ID pour le récupérer facilement dans le JS pour faire la requete de création d'une réservation*@
                            <td><button id="@String.Format("{0}_{1}", DayOfTheWeek.Value, i)" class="bg-success p-3" onClick="openModal(event)"></button></td>
                        }
                    }
                </tr>
            }
        }
    </tbody>
</table>
<input id="XSRF-TOKEN" type="hidden" value="@requestToken" />

<partial name="Partials/_IndexModal" />

@section scripts {
    <script>
        let myModal = new bootstrap.Modal(document.getElementById('myModal'));
        let getIdClickedBtn = null;

        function openModal(event) {
            getIdClickedBtn = event.target.attributes.id.value;
            myModal.show();
        }

        function validModal() {
            newReservation();
        }

        async function newReservation() {
            const url = '@linkGenerator.GetPathByPage(HttpContext, "./Services/MakeReservationService")';
            const token = document.getElementById("XSRF-TOKEN").value;

            const reservingName = document.getElementById('reservingName').value;
            const reservationDateString = getIdClickedBtn.split('_')[0];
            const parkingSlotId = parseInt(getIdClickedBtn.split('_')[1]);

            const [day, month, year] = reservationDateString.split('/').map(Number);

            const reservationDate = new Date(Date.UTC(year, (month - 1), day)).toISOString();

            const bodyParams = {
                ReservingName: reservingName,
                ReservationDate: reservationDate,
                ParkingSlotId: parkingSlotId
            };

            let init = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json; charset = utf-8;',
                    'XSRF-TOKEN': token
                },
                body: JSON.stringify(bodyParams)
            };

            const response = await fetch(url, init);
            
            if(response.ok)
            {
                //Rafraichi la page
                location.reload();
            }
            else
            {
                const data = await response.json();
                document.getElementById('error-span').innerHTML = data.message;
            }
        }
    </script>
}